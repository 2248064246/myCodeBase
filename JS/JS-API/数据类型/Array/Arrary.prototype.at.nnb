{
    "cells": [
        {
            "language": "markdown",
            "source": [
                "## **Array.prototype.at()**\r\n\r\n获取指定索引位置的元素\r\n\r\n**语法**\r\n\r\n```ts\r\nArray.prototype.at(idx);\r\n```\r\n\r\n`idx` 允许负值. 当`idx`小于 0 时, 将访问索引`index + array.length`.\r\n\r\n`idx` 小于 0, 且绝对值大于`array.length`时, 不会从索引`0`开始.\r\n\r\n`at()` 方法是通用的, 可以用于`类数组`. (其仅期望 this 具有 length 属性和以整数为键的属性。)"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "let aa = {0: 0, 1: 1, 3: 3, length: 3}\r\n\r\n// 需要注意 idx 和 length 相关, 超出 length 不会获取\r\nconsole.log(Array.prototype.at.call(aa, 2)) // => undefined\r\nconsole.log(Array.prototype.at.call(aa, 3)) // => undefined\r\n\r\n// 如果增加 length\r\naa.length = 4;\r\n// 现在能够获取到对应数据\r\nconsole.log(Array.prototype.at.call(aa, 3)) // => 3"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "undefined",
                                "undefined",
                                "3",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}